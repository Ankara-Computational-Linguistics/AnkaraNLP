de destekliyor. 2006'da protokolün gözden geçirilmiş bir sürümü olan SSH-2 bir standart olarak kabul edildi. Bu sürüm SSH-1 ile bağdaşmayan bir sürümdü. SSH-2 güvenliği ve gelişmiş özellikleri SSH-1'in üzerindeydi. Artık daha iyi bir güvenliğe sahipti, örneğin Diffie-Helman anahtar değişimi ve mesaj üzerinden yetkilendirme kodları ile güçlü bir bütünlük kontrolü sağladı. SSH-2'nin yeni özelliği tek bir SSH bağlantısının üzerinde bir grup kabuk oturumu çalıştırmadır. SSH-2'nin üstünlüğü ve SSH-1'den fazla olan popülerliği nedeniyle bazı uygulamalar (Lsh ve Dropbear) sadece SSH-2 protokolünü destekler. Kasım 2008'de, SSH'ın tüm sürümlerinde teorik bir güvenlik açığı fark edildi. Bu şifrelenmiş metnin bir bloğundan düz metnin 32 bit üzerinde bir düz metin dönüşümüne izin veren bir güvenlik açığıydı. Bu durumda Standart OpenSSH yapılandırmasını kullanarak, saldırganların başarı olasılığı düz metnin 32 bitlik dönüşümü içindi. OpenSSH 5.2 ise bu tür güvenlik açıklarına karşı davranışları değiştirilmiş bir şekilde çıkarıldı. SSH birçok platform için kullanılabilen bir protokoldür, bu platformlardan pek çoğu Unix türevleridir, bunun yanı sıra Microsoft Windows tarafından da kullanılır. Bazı uygulamalar SSH sunucu ya da istemcileri ile uyumlu ya da sadece SSH'da mevcut olan özelliklere ihtiyaç duyabilirler. Örneğin SSH VPN'i uygulamak için kullanılabilir ama şu an sadece OpenSSH sunucu ve istemcisinin uygulaması mevcuttur. SSH protokollünü kullanarak dosya iletimi için birçok yöntem mevcuttur. Genel Komutlar codice_1 Dosya Ä°ndirme codice_2 IP Adresi Yasaklama codice_3 IP Adresi Yasak KaldÄ±rma codice_4 Sunucuya Dosya Ä°ndirme codice_5 ZIP dosyasını çıkartma/açma codice_6 TAR.GZ dosyasını çıkartma/açma codice_7 GZIP dosyasını çıkartma/açma codice_8 Dosya Sıkıştırmak codice_9 SQL YÃ¼kleme codice_10 22 July 22 July, yönetmenliği ve senaristliği Paul Greengrass tarafından gerçekleştirilen 2018 çıkışlı Amerikan biyografik dram filmidir. Anders Danielsen Lie ve Jon Øigarden'ın başrollerinde olduğu film, 2011 Norveç saldırılarını konu edinmektedir. Filmin Netflix tarafından 2 Kasım 2018'de yayınlanması planlanıyor. Emilia Plater Emilia Plater (; 13 Kasım 1806 – 23 Aralık 1831), parçalanmış Lehistan-Litvanya Birliği topraklarından bir asil ve devrimci. Yurtsever olarak yetiştirilen Plater, 1830'daki Kasım Ayaklanması'nda savaştı ve Polonyalı isyancılar arasında yüzbaşı rütbesine yükseldi. Ayaklanmanın sonuna doğru hastalandı ve öldü. Büyük çarpışmalara katılmamasına rağmen, Plater'in öyküsü halka geniş çapta duyuruldu ve bir dizi sanat ve edebiyat çalışmasına esin kaynağı oldu. Plater, eskiden Lehistan-Litvanya Birliği'nin bir parçası olan Polonya ve Litvanya'da ulusal kahraman ilan edildi. Polonyalı sanatçılar ve Polonya halkı tarafından ulusal amaçlar için savaşan kadınların sembolü olarak kabul edilmektedir. Çoğu zaman Litvanyalı Jeanne d'Arc takma adıyla anılmaktadır. Emilia Plater, Vilnius'ta Leh-Litvan bir ailenin kızı olarak doğdu. Kökenleri Vestfalya'ya dayanan Plater ailesi, tamamen Polonyalılaşmıştır. Ailenin çoğu 15. yüzyılda Livonya'ya ve daha sonra Litvanya'ya taşındı. Emilia Plater; Leh, Leh-Litvan veya Litvan olarak tanımlanmaktadır. Plater'in babası Franciszek Ksawery Plater ve annesi Anna von der Mohl (Anna z Mohlów), 1815'te Plater dokuz yaşındayken boşandı. Plater, Michał Plater-Zyberk ve Izabela Helena Syberg zu Wischling adlı uzak akrabaları tarafından Livonya Dükalığı'na (günümüzde Letonya) bağlı Daugavpils (Dźwina) yakınlarındaki Līksna'da bulunan bir evde büyütüldü. İyi bir eğitim alan Plater, Tadeusz Kościuszko ve Prens Józef Poniatowski'nin çabalarını takdir etmekteydi. Johann Wolfgang von Goethe ve Friedrich Schiller hayranıydı ve eserlerini Almanca orijinallerinden okuyabilmekteydi. Polonya tarihine değer verilen bir çevrede yetiştirildi ve edebi kahramanları arasında Prenses Wanda ve Adam Mickiewicz'in "Grażyna" şiiri yer almaktaydı. Plater ayrıca Yunan İsyanı'nın kadın sembollerinden Laskarina Bouboulina, Polonyalı savaşçı Anna Dorota Chrzanowska ve Jeanne d'Arc hayranıydı. Bunların yanında 19. yüzyılın başlarında aristokrat ailelerin kızları arasında yaygın olmayan binicilik ve atıcılıkla uğraşmaktaydı. Ayrıca Ruten ve Beyaz Rus folkloru ile ilgilenmekteydi. Filaret Derneği üyesi arkadaşları ve bağlantıları vardı. X.509 Kriptografide, X.509 açık anahtar sertifikalarının formatını tanımlayan bir standarttır. X.509 sertifikaları, internette gezinmek için güvenli protokol olan HTTPS'nin temeli olan TLS/SSL dahil olmak üzere birçok internet protokolünde kullanılmaktadır. Elektronik imzalar gibi çevrimdışı uygulamalarda da kullanılırlar. Bir X.509 sertifikası bir açık anahtar ve bir kimlik (bir ana bilgisayar adı veya bir kuruluş veya bir birey) içerir ve bir sertifika yetkilisi tarafından imzalanır veya kendinden imzalı olarak imzalanır. Sertifika güvenilir bir sertifika yetkilisi tarafından imzalandığında veya başka yollarla doğrulandığında, bu sertifikayı tutan biri, başka bir tarafla güvenli iletişim kurmak için sertifikanın içerdiği açık anahtara güvenebilir veya ilgili özel anahtar ile dijital olarak imzalanmış belgeleri doğrulayabilir. Sertifikaların formatının yanı sıra, X.509 artık geçerli olmayan sertifikalar hakkında bilgi dağıtmak için sertifika iptal listelerini, ve sertifikaların, diğer sertifikalar tarafından imzalanan ve sonunda bir güvenilir bağlantıya ulaşan ara sertifika yetkilisi sertifikaları tarafından imzalanmasını sağlayan bir sertifika yolu doğrulama algoritmasını belirtir. X.509, Uluslararası Telekomünikasyon Birliği Standardizasyon sektörü (ITU-T) tarafından tanımlanmıştır ve bir başka ITU-T standardı olan ASN.1'e dayanmaktadır. X.509, başlangıçta 3 Temmuz 1988'de yayınlandı ve X.500 standardı ile birlikte başlatıldı. Sertifika vermek için sertifika yetkililerinin sıkı bir hiyerarşik sistemi olduğunu varsayar. Bu, herkesin (sadece özel sertifika yetkililerinin değil) imzalayabileceği ve dolayısıyla başkalarının anahtar sertifikalarının geçerliliğini onaylayabileceği PGP gibi güven ağı modelleri ile çelişir. X. 509'un 3. versiyonu, ağ köprüleri ve örgü topolojileri gibi diğer topolojileri destekleme esnekliğini içerir. Eşler arası, OpenPGP benzeri bir güven ağında kullanılabilir, ancak 2004'ten bu yana nadiren kullanılmıştır. X.500 sistemi sadece devlet kimliği bilgi paylaşımı antlaşması yerine getirilmesi amacıyla egemen ülkeler tarafından uygulanmıştır ve IETF'nin açık anahtar altyapısı (X.509), veya PKIX, çalışma grubu, standardı İnternet'in daha esnek bir örgütleşimine uyarlamıştır. Aslında, "X.509 sertifikası" genellikle IETF'nin PKIX sertifikasına ve RFC 5280'de belirtilen ve genellikle "Açık Anahtar Altyapısı" "(X.509) a karşılık olarak PKIX olarak adlandırılan "X.509 v3 sertifika standardının sertifika iptal listesi profiline refere eder. X.509 sisteminde, imzalı bir sertifika isteyen bir kuruluş bir sertifika imzalama isteği yoluyla bir tane ister. Bunu yapmak için, önce bir anahtar çifti oluşturur, özel anahtarı gizli tutar ve sertifika imzalama isteğini imzalamak için kullanır. Bu başvuru sahibini ve başvuru sahibinin sertifika imzalama isteğinin imzasını ve sertifikanın verildiği Distinguished Name (DN)'i doğrulamak için kullanılacak açık anahtarını tanımlayan bilgiyi içerir. Sertifika imzalama isteğine sertifika yetkilisi tarafından talep edilen diğer kimlik belgeleri veya kimlik kanıtları eşlik edebilir. Sertifika yetkilisi, belirli bir ayırt edici isme açık bir anahtarı ilişkilendiren bir sertifika verir. Bir kuruluşun güvenilen kök sertifikaları, tüm çalışanlara şirket PKI sistemini kullanabilmeleri için dağıtılabilir. Internet Explorer, Firefox, Opera, Safari ve Chrome gibi tarayıcılar önceden kurulmuş olan önceden belirlenmiş bir kök sertifika seti ile birlikte gelir, böylece büyük sertifika yetkililerinden SSL sertifikaları anında çalışır; Aslında tarayıcıların geliştiricileri, tarayıcıların kullanıcıları için hangi sertifika yetkililerinin güvenilir üçüncü taraf olduğunu belirler. Örneğin, Firefox, dahil edilen sertifika yetkililerinin listesini içeren bir CSV ve / veya HTML dosyası sağlar. X.509 ve RFC 5280 ayrıca sertifika iptal listesi (CRL) uygulamaları için standartlar içerir. Sertifikanın geçerliliğini kontrol etmenin başka bir IETF onaylı yolu da, Çevrimiçi Sertifika Durum Protokolüdür (OCSP). Firefox 3 en az Vista ve sonrası Windows sürümlerinde olduğu gibi, OCSP'nin varsayılan olarak denetlenmesini sağlar. Standartların öngördüğü yapı, resmi bir dilde ifade edilmiştir, Abstract Syntax Notation One (ASN.1). X.509 v3 dijital sertifikasının yapısı aşağıdaki gibidir: Her bir uzantı, kritik veya kritik olmayan bir göstergeyle birlikte bir değer kümesi olan nesne tanımlayıcısı olarak ifade edilen kendi kimliğine sahiptir. Sertifika kullanan bir sistem, tanımadığı kritik bir uzantıyla veya işleyemediği bilgileri içeren kritik bir uzantıyla karşılaşırsa o sertifikayı reddetmelidir. Kritik olmayan bir uzantı tanınmıyorsa göz ardı edilebilir, ancak tanınması durumunda işlenmelidir. Versiyon 1'in yapısı RFC 1422'de verilmiştir. ITU-T, bir süreden sonra verenin veya özne isminin yeniden kullanılmasına izin vermek için 2 numaralı sürümde veren ve özne benzersiz belirteçlerini tanıttı. Yeniden kullanım örneği, bir CA'nın iflas etmesi ve adının ülkenin genel listesinden silinmesidir. Bir süre sonra, aynı ada sahip başka bir CA, birincisi ile ilgisi olmamasına rağmen kendisini kaydedebilir. Ancak, IETF hiçbir veren ve özne isminin tekrar kullanılmasını önermemektedir. Bu nedenle, sürüm 2, Internet'te yaygın olarak kullanılmamaktadır. Uzantılar versiyon 3'te tanıtıldı. Bir CA, yalnızca belirli bir amaç için bir sertifika vermek için uzantıları kullanabilir (örneğin, yalnızca dijital nesneleri imzalamak için). Tüm sürümlerde, seri numarası, belirli bir CA tarafından verilen her sertifika için benzersiz olmalıdır (RFC 5280'de belirtildiği gibi). RFC 5280 (ve öncülleri), sertifikanın nasıl kullanılması gerektiğini gösteren bir dizi sertifika uzantısı tanımlar. Bunların büyük çoğunluğu joint-iso-ccitt(2) ds(5) id-ce(29) OID'den arklardır. Bölüm 4.2.1'de tanımlanan en yaygın olanlardan bazıları şunlardır: Genel olarak, bir sertifikanın kullanımını kısıtlayan çeşitli uzantıları varsa, belirli bir kullanım için gereken tüm kısıtlamaların uygun olması gerekir. RFC 5280, hem keyUsage (anahtar kullanımı) hem de extendedKeyUsage (genişletilmiş anahtar kullanımı) öğelerini içeren bir sertifikanın belirli bir örneğini verir: bu durumda, her ikisi de işlenmeli ve sertifika yalnızca her iki uzantı bir sertifikanın kullanımını belirlerken tutarlı ise kullanılabilir. Örneğin, NSS (network security services) sertifika kullanımını belirtmek için her iki uzantıyı kullanır. X.509 sertifikaları için yaygın olarak kullanılan birkaç dosya adı uzantısı vardır. Maalesef, bu uzantılardan bazıları özel anahtarlar gibi diğer veriler için de kullanılmaktadır. PKCS#7, veriyi imzalamak veya şifrelemek için bir standarttır. Sertifika, imzalanmış verileri doğrulamak için gerekli olduğundan, bunları SignedData yapısına dahil etmek mümkündür. Bir.P7C dosyası imzalanacak herhangi bir veri olmadan, dejenere bir SignedData yapısıdır. PKCS#12, kişisel bilgi alışverişi (PFX) standardından evrildi ve tek bir dosyada açık ve özel nesneleri değiştirmek için kullanıldı. Sertifika zinciri (RFC 5280 tarafından tanımlanan "sertifika yolu" eşdeğer kavramına bakınız) aşağıdaki özelliklere sahip bir veya daha fazla CA sertifikası (genellikle sonuncusu kendinden imzalı bir sertifikadır) tarafından takip edilen sertifikaların listesidir (genellikle bir son varlık sertifikası ile başlıyor): Sertifika zincirleri, bir hedef sertifikada (zincirdeki ilk sertifika) yer alan açık anahtarın (PK) ve içerdiği diğer verilerin etkin bir şekilde özneye ait olup olmadığını kontrol etmek için kullanılır. Bunu doğrulamak için, hedef sertifikanın üzerindeki imza, bir sonraki sertifikanın içerdiği PK kullanılarak, ki onun imzası da ondan sonraki sertifika kullanılarak doğrulanmış, zincirdeki son sertifikaya ulaşılana kadar doğrulanır. Son sertifika bir güvenilir bağlantı olduğundan, başarılı bir şekilde ulaşılması hedef sertifikanın güvenilir olduğunu kanıtlayacaktır. Önceki paragraftaki açıklama, RFC 5280 tarafından tanımlanan sertifika yolu doğrulama süreci (sertifikalarda geçerlilik tarihlerinin doğrulanması, CRL'lerin aranması gibi ek kontroller içeren) hakkında basitleştirilmiş bir görünümdür. Sertifika zincirlerinin nasıl oluşturulduğunu ve doğrulandığını inceleyerek, somut bir sertifikanın çok farklı sertifika zincirlerinin (hepsi geçerli) bir parçası olabileceğine dikkat edilmelidir. Bunun nedeni, aynı özne ve açık anahtar için birkaç CA sertifikası oluşturulabilmesi, ancak farklı özel anahtarlarla (farklı CA'lardan veya aynı CA'dan farklı özel anahtarlardan) imzalanabilmesidir. Dolayısıyla, tek bir X.509 sertifikasının yalnızca bir veren ve bir CA imzası olsa da, tamamen farklı sertifika zincirleri oluşturarak birden fazla sertifikaya bağlanabilir. Bu PKI'lar ve diğer uygulamalar arasında çapraz sertifikasyon için çok önemlidir. Aşağıdaki örneklere bakınız. Bu ÅŸemalarda: PKI 2'de ("Kullanıcı 2" gibi) bulunan kullanıcı sertifikalarının PKI 1 tarafından güvenilmesini sağlamak için CA1, CA2'nin açık anahtarını içeren bir sertifika (cert2.1) oluşturur. Şimdi hem "cert2 hem de cert2.1 (yeşil) aynı özneye ve açık anahtara sahiptir, bu nedenle cert2.2 (Kullanıcı 2) için iki geçerli zincir vardır: " cert2.2 → cert2 "ve" cert2.2 → cert2. 1 → cert1". Benzer şekilde, CA2, CA1'in açık anahtarını içeren bir sertifika (cert1.1) oluşturabilir, böylece PKI 1'de ("Kullanıcı 1" gibi) bulunan kullanıcı sertifikaları PKI 2 tarafından güvenilir hale gelir. Hem cert1 hem de cert3 aynı açık anahtarı (eskisinden) içerdiğinden, cert5 için iki geçerli sertifika zinciri vardır: "cert5 → cert1" ve "cert5 → cert3 → cert2" ve cert6 için de benzer şekildedir. Bu, eski kullanıcı sertifikalarının (cert5 gibi) ve yeni sertifikaların (cert6 gibi) yeni CA anahtarlarına geçiş sırasında yeni kök CA sertifikasına sahip olan veya güvenilen bağlantı olarak eski tarafa kayıtsız bir şekilde güvenebilmesini sağlar. Bu, wikipedia.org ve diğer bazı Wikipedia web siteleri tarafından kullanılan kodu çözülmüş bir X.509 sertifikası örneğidir. Veren alanında belirtildiği gibi GlobalSign tarafından verilmiştir. Özne alanı Wikipedia'yı bir kurum olarak tanımlar ve Özne Alternatif Adı alanı, kullanılabileceği ana makine adlarını açıklar. Özne Açık Anahtar Bilgisi alanında bir ECDSA açık anahtarı bulunur, alt kısımdaki imza ise GlobalSign'ın RSA özel anahtarı ile oluşturulmuştur. Certificate: Bu son varlık sertifikasını doğrulamak için, Veren ve Yetkili Anahtar Tanımlayıcısı ile eşleşen bir ara sertifikaya ihtiyaç vardır: TLS bağlantısında, uygun şekilde yapılandırılmış bir sunucu, ara bağlantıyı el sıkışmasının bir parçası olarak sağlayacaktır. Ancak, ara sertifikayı son varlık sertifikasından "CA Verenleri (Issuers)" URL'sini getirerek de almak mümkündür. Bu, bir sertifika yetkilisine ait bir ara sertifikanın örneğidir. Bu sertifika, yukarıdaki son varlık sertifikasını imzaladı ve aşağıdaki kök sertifika tarafından imzalandı. Bu ara sertifikanın özne alanı, imzaladığı son varlık sertifikasının veren alanı ile eşleşmektedir. Ayrıca, aradaki "özne anahtar tanımlayıcısı" alanı, son varlık sertifikasındaki "yetki anahtarı tanımlayıcısı" alanıyla eşleşir. Bu, bir sertifika yetkilisini temsil eden, kendinden imzalı bir kök sertifika örneğidir. Veren ve özne alanları aynıdır ve imzası kendi açık anahtarı ile doğrulanabilir. Güven zincirinin geçerliliği burada bitmelidir. Doğrulama programının güven deposunda bu kök sertifika varsa, son varlık sertifikası TLS bağlantısında kullanılmak üzere güvenilir kabul edilebilir. Aksi takdirde, son varlık sertifikası güvenilmez olarak kabul edilir. Bruce Schneier, Peter Gutmann ve diğer güvenlik uzmanları tarafından PKI sorunları hakkında bir dizi yayın vardır. Gerçeklemeler tasarım kusurları, hatalar, standartların farklı yorumları ve farklı standartların birlikte çalışmamasının eksikliğinden muzdariptir. Bazı problemler: Dijital imza sistemleri çalışmak için kriptografik özet fonksiyonlarına ihtiyaç duyar. Açık anahtar altyapısı artık güvenli olmayan bir özet fonksiyonu kullanılmasına izin verdiğinde, bir saldırgan sertifikaları oluşturmak için özet fonksiyonundaki zayıflıkları kullanabilir. Özellikle, bir saldırgan özet çakışması üretebiliyorsa, bir CA'yı zararsız içerikli bir sertifikayı imzalamaya ikna edebilirler; ve bu içeriğin özeti, saldırganın seçtiği değerlerle oluşturduğu bir başka, kötü niyetli sertifika içeriğinin özetiyle özdeştir. Saldırgan daha sonra CA tarafından sağlanan imzayı kötü amaçlı sertifika içeriğine ekleyebilir ve CA tarafından imzalanmış gibi görünen kötü amaçlı bir sertifikayla sonuçlanabilir. Kötü niyetli sertifika içerikleri yalnızca saldırgan tarafından seçildiğinden, zararsız sertifikadan farklı geçerlilik tarihleri veya ana bilgisayar adlarına sahip olabilirler. Kötü amaçlı sertifika, daha güvenilir sertifikalar verebilecek bir "CA: true" alanı bile içerebilir. X.509 imzalarını oluşturmak için özet çarpışması kullanmak, saldırganın sertifika yetkilisinin imzalayacağı verileri tahmin edebilmesini gerektirir. Bu, CA tarafından imzalanan sertifikalarda, tipik olarak seri numarasında rastgele bir bileşen üreterek hafifletilebilir. CA/Browser Forum, 2011'den bu yana Baseline Requirements Section 7.1'de seri numarası entropisine ihtiyaç duymuştur. 1 Ocak 2016 itibarıyla, Temel Koşul Gereksinimleri, SHA-1 kullanan sertifikaların verilmesini yasaklamıştır. 2017'nin başından itibaren, Chrome ve Firefox, SHA-1 kullanan sertifikaları reddetmiştir. Mayıs 2017 itibarıyla hem Edge hem de Safari , SHA-1 sertifikasını reddetmiştir. Tarayıcı olmayan X.509 doğrulayıcıları, SHA-1 sertifikalarını henüz reddetmiyor. 1995 yılında, Ulusal Standartlar ve Teknoloji Enstitüsü ile birlikte İnternet Mühendisliği Görev Gücü, Açık Anahtar Altyapısı (X.509) çalışma grubunu oluşturdu. Haziran 2014'te sonuçlanan çalışma grubu, genellikle "PKIX" olarak adlandırılmaktadır. X.509'un kullanımının dağıtılmasının ile ilgili RFC'ler ve diğer standartlar belgeler oluşturuldu. Özellikle, Internet protokollerinde X.509'un nasıl kullanılacağını tanımlayan RFC 3280 ve onun halefi RFC 5280 üretildi. TLS/SSL ve HTTPS, S/MIME (Güvenli Çok Amaçlı Internet Posta Uzantıları) ve WiFi kimlik doğrulaması için EAP-TLS yöntemi X.509'un RFC 5280 profilini kullanır. SMTP, POP, IMAP, LDAP, XMPP ve daha fazlası gibi TLS kullanan herhangi bir protokol, doğal olarak X.509'u kullanır. IPsec, RFC 4945'te tanımlanan kendi X.509 profilini kullanır. OpenCable güvenlik belirtimi, kablo sektöründe kullanılmak üzere X.509'un kendi profilini tanımlar. Akıllı kartlar ve TPM'ler gibi cihazlar genellikle kendilerini veya sahiplerini tanımlamak için sertifikalar taşırlar. Bu sertifikalar X.509 biçimindedir. WS-Security standardı, kimlik doğrulamayı TLS aracılığıyla veya kendi sertifika profili aracılığıyla tanımlar. Her iki yöntem de X.509 kullanır. Microsoft Authenticode kod imzalama sistemi, hangi bilgisayar programlarını kimin yaptığını tanımlamak için X.509'u kullanır. OPC UA endüstriyel otomasyon iletişim standardı X.509 kullanmaktadır. SSH genellikle "trust on first use" (ilk kullanımda güven) modelini kullanır ve sertifikalara ihtiyaç duymaz. Ancak, popüler OpenSSH uygulaması X.509 olmayan sertifika formatına dayanan CA imzalı bir kimlik modelini desteklemektedir. Fiziksel kopyalanamayan fonksiyon türleri Fiziksel kopyalanamayan fonksiyon (FKF), çözülmesi kolay fakat tahmin edilmesi oldukça zor olan bir fonksiyonun fiziksel bir yapıda şekillendiği bir oluşumdur. Bütün FKF'ler sıcaklık, gerilim, elektromanyetik parazitler gibi çevresel faktörlerden etkilenirler ve performansları bu faktörler etkisinde değişkenlik gösterebilir. Bu nedenle FKF'lerin asıl gücü sadece rassal olmalarına değil, farklı cihazlarda ve farklı ortamlarda farklılık gösterebilmeleri ve aynı zamanda bazen farklı çevresel koşullarda aynı olabilmeleridir. Bu tarz FKF'ler temel rassallık özelliklerini taşıyan FKF'lerle kıyaslandığında, çevresel faktörlerden daha az etkilendikleri ve cihazları birbirinden ayırabilme konusunda daha güçlü oldukları görülür. Bunun sebebi, daha farklı prensipler kullanıyor olmaları ve bu FKF’lerin parametrelerinin doğrudan kontrol edilmiş ve optimize edilmiş olmasıdır. Optik FKF, fiziksel tek yönlü bir fonksiyondur ve içinde ışık dağıtan parçalar olan şeffaf bir malzemeden oluşur. Eğer bir lazer ışını bu malzemenin üzerine yansırsa, rastgele ve benzersiz bir örüntü oluşturur. Işığı dağıtan parçaların yerleştirilmesi kontrol edilmeyen bir işlemdir ve lazer ile parçacıklar arasındaki etkileşim oldukça karışıktır. Bu nedenle aynı örüntüyü oluşturabilecek farklı bir FKF oluşturmak çok zordur. Fonksiyonun kopyalanamaz olduğu varsayımı da buradan gelir. Kaplama FKF'si entegre devrelerin (IC) üst tabakasında oluşturulabilir. Normal bir entegre devrenin üzerinde metal bir ağ örgüsü tarak şeklinde dizilmiştir. Tarak yapısının yanları ve üstündeki boşlukları opak bir madde ve rastgele dielektrik parçacıklarla doldurulmuştur. Rastgele yerleşim, boyut ve parçacıkların dielektrik kuvveti sayesinde metal kablolar arasındaki kapasitans belli bir seviyeye kadar rassal olur. Bu özgün rastgelelik özelliği aynı zamanda kaplama FKF'sini kullanan bir cihaz için özgün bir tanımlayıcı oluşturulmasında kullanılabilir. Aynı zamanda entegre devrenin üstünün opak madde ile kaplanması, o cihazın alt tabakasının ters mühendislik.gibi saldırılara karşıda koruyabilir. Bunun sebebi bir saldırgan opak maddeyi çıkarmaya çalıştığında kapasitansı da değiştirmesi ve bu nedenle özgün tanımlayıcının da farklılaşmasıdır. Kopyalanamayan bir tanımlayıcının kaplama FKF'si kullanılarak nasıl elde edildiği gösterilmiştir. Doğrudan tanımlanmış rassallık kullanan FKF’lerin aksine temel rassallık kullanılan FKF’ler daha çok tercih edilmektedir. Bunun sebebi, bu FKF’lerin yapım aşamasında değişikliğe uğratılmaksızın bir tasarımda kullanılabilmeleridir. Gecikme FKF’leri silikon üzerindeki kablolar ve devre elemanlarının gecikmelerinden faydalanır. Verilen girdiye göre devre içinde bir yarış oluşturulur. İki farklı yolu izleyen devrelerden hangisinin önce geldiği belirlenir. Genellikle flip flop olarak tasarlanan bir hakem, hangi bağlantının önce geldiğine bağlı olarak 1 veya 0 çıktısı üretir. Birçok devrenin gerçekleştirilebilmesi olasıdır ve bunlardan en az ikisi fabrikasyondur. Aynı devre düzenine sahip olabilmesi için tasarlanan iki farklı çipin mantık fonksiyonlarının rassal gecikme farkları nedeniyle farklı olması beklenir. Geciktirici bir döngüye dayanan FKF(örnek olarak Halka Osilatör), ilk olarak FKF kısaltmasından ve herhangi bir entegre FKF’den bahsedilen yayımda tanıtılmıştır. Çoklu xor işlemi kullanan bir FKF ise, (FKF kullanarak güvenli bir işlemci oluşturabilme yeteneği olduğundan) RF ara yüzü yardımıyla sahtekarlığa karşı uygulamalarda RFID kullanımını kolaylaştırmıştır. Bu FKF’ler SRAM hafıza birimi bulunduran bütün entegre devrelerde mevcuttur. Birçok makalede SRAM tabanlı FKF’ler davranış oluşturma aşaması ve sahtekârlık karşıtı uygulamalarda kullanım konuları altında incelenmiştir. Bu makalelerden birçoğu gizli bir anahtarı dijital formda olmayan güvenli bir şekilde depolayabilecek bir sistem tasarımına olanak sağlamış ve ilerletmiştir. Buna örnek olarak, RFID etiketi verilebilir. RFID etiketi kolayca kopyalanabilirken, bir FKF eklendiğinde, makul bir zamanda kopyasını oluşturabilmek oldukça zorlaşmıştır. Aynı zamanda, çeşitli devre temaları için SRAM tabanlı çip tanımlaması konusunda birçok patent de bulunmaktadır. 2000'lerdeki SRAM tabanlı güvenlik sistemlerinin tanımlamasında FKF terimi yerine çip özdeşleştirme terimi kullanılmıştır. Fakat günümüzde bu konu hakkında FKF teriminin kullanılması araştırma toplulukları tarafından kabul edilmiştir. Kelebek FKF’si 2 mandalın ya da flip flop’un çapraz eşlenmesine dayanır. Bu FKF’de kullanılan mekanizma SRAM FKF’sine benzese de herhangi bir SRAM içeren FPGA’de kullanılabilme avantajına sahiptir. İki durumlu halka FKF ya da kısa olarak İDH- FKF Q Chen et al tarafından tanıtılmıştır. İDH- FKF’nin çalışma prensibi, çift sayıda inverterdan oluşan bir halkanın 2 olası sabit durumu olmasıdır. İnverter sayısını iki katına çıkartarak ve aralarına çoklayıcı yerleştirerek, İDH- FKF’lerden çok sayıda kimlik sorgu/yanıt ikilisi elde etmemiz mümkündür. Dijital FKF geleneksel analog silikon FKF’lerin zafiyetlerini çizebilmiştir. Parmak izinin transistörlere bağlı olduğu analog FKF’lerin aksine dijital devrelerin parmak izi litografi çeşitliliklerinden elde edilen geometrik rassallığa bağlı olan VLSI (Çok geniş ölçekli tümleşim)’den çıkarılır. Böyle bağlantılar CMOS VLSI devreleriyle, kısa devre, kayar nokta kapısı gerilimi gibi sebeplerle uyumsuzluk çıkarabilir. Bu nedenle güvensizdirler. Bu sorunu çözmek için bir çözüm eğimli flip-flop kullanarak her bir CMOS transistörün işlem durumunun sabit olması sağlanabilir. Bu şekilde devrenin kendisinin de çevresel ve işlemsel değişikliklere bağışık olduğundan emin olunabilir. Manyetik FKF, bir manyetik şeritli kart üzerinde bulunur. Manyetik medyanın fiziksel yapısı, üretim sürecinde bir karta milyarlarca baryum ferrit parçacığını dağıtarak üretilir. Parçacıkların birçok farklı şekli ve boyutu vardır. Oluşturulan bu bulamaç bir reseptör katmanına uygulanır. Parçacıklar tıpkı bir avuç dolusu manyetik kumu taşıyıcıya dökmüşçesine rastgele dağılırlar. Kumu 2. Bir defa aynı şemayı taşıyacak şekilde dökmek, parçacıkların kaç tanesinin yolundan saptığı ve rastgele geometri ve şekillerinden dolayı fiziksel olarak imkânsızdır. Üretim sürecinde oluşan rassallık kontrol altına alınamaz. Bu da manyetik FKF’yi klasik bir temel rassallık kullanan FKF sınıfına sokar. Bulamaç kuruduğu zaman reseptör tabakası şeritler şeklinde kesilir ve plastik kartlara uygulanır. Fakat bu süreçte manyetik şeritteki rassal örüntü değişmez ve değişmemelidir. Fiziksel kopyalanamayan fonksiyonları sayesinde aynı iki manyetik şeritli kart üretilmesi imkânsızdır. Standart boyutlarda kartlar kullanarak aynı FKF’ye sahip olan iki farklı kart üretme olasılığı 900 milyonda 1 olarak hesaplanmıştır. Hatta FKF manyetik olduğundan kart okunabilir ayırt edici bir sinyal yayar. Manyetik şeride işlenecek kişisel veriler başka bir rassallık katmanı oluşturur. Kart kişisel ve ayırt edici bilgilerle işlendikten sonra aynı manyetik imzaya sahip 2 farklı manyetik şeritli kart üretilmesi olasılığı yaklaşık 10 milyarda 1 olacaktır. Karta işlenmiş bilgiler, FKF’nin önemli bileşenlerini işaret etmesi için de kullanılabilir. Bu imza dijitalleştirilebilir ve genellikle manyetik parmak izi olarak adlandırılır. Bu kullanıma örnek olarak Magneprint markasının sistemi verilebilir. FKF üzerindeki manyetik kafa bir uyarıcı olarak davranır ve rassal manyetik sinyali güçlendirir. Manyetik kafanın hız, basınç, yön, ivme ve farklı FKF elemanlarından etkilenen karmaşık etkileşimi sayesinde, kafanın manyetik FKF üzerindeki her hareketinde rassal ve ayırt edilebilir bir sinyal oluşur. B durumu binlerce notalı bir şarkı olarak da düşünebilirsiniz. Kafanı bir kart üzerinde birçok kez gezmesi sonucu aynı notaların tekrar tekrar aynı örüntüde çıkma olasılığı 100 milyonda 1’dir. Fakat genel melodi yine de ayırt edilebilir. Manyetik kafanın manyetik şerit ile etkileşimi sonucu oluşan rassal FKF davranışı, manyetik FKF’yi dinamik jeton kimlik doğrulama, adli kimlik, anahtar oluşturma, bir kerelik parolalar ve dijital imzalar gibi konularda kullanışlı kılar. Metal direnç FKF entropisini güç dağıtım şebekesine ve entegre devreye bağlı olan metal kontaklar ve kablolar arasındaki rassal fiziksel çeşitlilikten sağlar. Bir entegre devredeki rassal direnç çeşitliliklerini güçlendirmek için bazı faktörlerin değiştirilmesi birçok avantaj sağlar. Bunlardan bazıları: Bir sistemin boyutu de Broglie dalga boyunun altına indirildikçe kuantum bağlamanın etkileri oldukça önemli hale geliyor. Kuantum Bağlayan FKF’nin asıl rassallığı atomsal boyuttaki bileşimsel ve yapısal düzensizliklerden gelir. Kuantum Bağlayan FKF’nin fiziksel karakteri bu boyuttaki Kuantum Mekaniğinin etkilerine bağlı iken kuantum mekaniği de rassal atomik yapıya göre belirlenir. Bu tip bir yapıyı kopyalamak, çok sayıda atom olması, atomik düzeydeki işlemlerin kontrol edilmemesi ve atomların maniple edilememesi gibi sebeplerden ötürü pratikte imkânsızdır. Kuantum Bağlama etkilerinin rezonans-tünelleme diyotu gibi cihazların üretimi için kullanılabildiği gösterilmiştir. Bu cihazlar standart yarı iletken üretimi işlemiyle üretilebilir ve toplu üretimle birçok cihazın üretimi paralelleştirilebilir. Bu FKF’yi kopyalamak için atom seviyesinde mühendislik bilgisi gereklidir ve bugüne kadarki en küçük ve en yoğun FKF’dir. Hatta Kuantum Bağlayan FKF’sindeki atomlar bilinçli olarak etkileşimle tekrar düzenlenebilir ve sıfırlanabilir. Kristal büyümesi ya da üretimde oluşabilecek sorunlar iki boyutlu materyallerin bant aralıklarında boyutsal farklılıklar yaratabilmektedir. Bu durumda ışıldama(photoluminescence) ölçümleriyle karakteristik bir özellik haline getirilebilir. Açısı ayarlanabilen bir iletim filtresi, basit bir optik ve bir CCD kamera yardımıyla, boyuta bağlı ışıldama yakalanabilir ve bu ışıldama kişisel bir örüntü yaratacak karmaşık bir harita haline getirilebilir. Mary Spiteri Mary Spiteri (b. 25 Ekim 1947), Maltalı şarkıcı. Mary, 1992 Eurovision Şarkı Yarışması'nda Malta'yı "Little Child" adlı şarkıyla temsil etmiştir. Yarışmada 3. olmuştur. Fiziksel klonlanamayan fonksiyonlar PUF (physical unclonable function ya da Fiziksel klonlanamayan fonksiyonlar), mikroişlemci ve benzeri yarı iletken cihazların üretiminden kaynaklanan, her cihazın kendine has olan bir dijital parmak izidir. PUF yarı iletkenlerin üretim sürecinin doğal bir sonucu olduğu için tüm yarı iletkenler için farklılık gösterir. PUF genellikle şifreleme işlemleri için kullanılır. Fiziksel klonlanamayan fonksiyonlar fiziksel yapının içinde somut bir varlıktır. Bugün, PUF genellikle entegre devrelerde gerçeklenmiştir ve genellikle yüksek güvenlik gerektiren uygulamalarda kullanılır. Kimlik doğrulamak için düzensizlik barındıran sitemlerin fiziksel özelliklerini kullanma fikri ile ilgili ilk çalışmalar Bauder 1983 ve Simmons 1984 dayanmaktadır. Naccache ve Frémanteau 1992 yılında hafıza kartları için bir kimlik doğrulama yöntemi geliştirdi. POWF (physical one-way function ya da tek yönlü fiziksel fonksiyon) ve PUF 2001 ve 2002 yıllarında ilk kez ortaya çıktı. Daha sonraki yayınlarda ilk PUF'lar optik ölçümleri temel alacak şekilde değil, devre ölçümlerini temel alacak şekilde silikon üzerine üretilmiş olan elektrik devrelerinde entegre edildi. 2010-2013,tüm akıllı kartlar için karta özgü bir şifreleme anahtarı oluşturulmasında kullanılabilecek, her cihazın kendine has bir silikon parmak izi oluşturmasıyla, PUF akıllı kart pazarında dikkat çekti. PUF gizli anahtarın depolanmasında, batarya destekli depolama yöntemlerine güvenli bir alternatif olarak Xilinx Zynq Ultrascale++ ve Altera gibi ticari FPGA'lerde kullanılmaya başlandı. PUF'lar fiziksel mikro yapının cihazlar için tekil olmasına dayanıyor. Bu mikro yapı üretim aşamasında ortaya çıkan rassal fiziksel etmenlerden kaynaklanıyor. Bu faktörler öngörülemeyen ve kontrol edilemeyen faktörlerdir, bu da onun kopyalanması veya tekrar üretilmesini imkânsız hale getiriyor. Gömülü bir şifreleme anahtarı yerine, PUF bu mikro yapıyı değerlendirerek meydan okuma karşılık verme temelli kimlik doğrulama gerçekliyor. Fiziksel yapı her uyarıldığında, cihazın mikro yapısındaki karmaşık ilişkilerden dolayı tahmin edilemeyen fakat tekrarlanabilir bir yapıda karsılıklar ortaya çıkar. Bu yapı tamamı ile üretim aşamasındaki tahmin edilemeyen fiziksel etmenlere bağlıdır (adil para gibi). Fiziksel yapının uyarılması, meydan okuma; PUF sisteminin tepkisi işe karşılık verme olarak tanımlanır. Belirli bir meydan okuma ile ilgili meydan okumaya verilen karşılığa meydan okuma–karşılık çifti denir. Cihazın kimliği, cihazın kendi mikro yapısı sayesinde sağlanmış olur. Bu yapı, doğrudan meydan okuma karşılık verme temelli kimlik doğrulama mekanizması ile ortaya çıkmaz, bu tür bir cihaz aldatma saldırıları karsı dayanaklıdır. Fiziksel mikro yapıdan güçlü ve tekil bir şifreleme anahtarı çıkarmak için bulanık ayırıcı veya anahtar üretici PUF kullanılabilir. Aynı benzersiz anahtar her zaman yeniden PUF ile üretilebilir. Meydan okuma karşılık verme temelli mekanizmaya, kriptografi uygulanarak elde edilir. PUF donanımda çok az yer kaplayacak şekilde gerçeklenebilir. Diğer sistemlerde bellekte olası tüm meydan okumalar için bir karşılık tutmak yani meydan okuma bitinin üstü kadar donanımda yer ayırmak gerekirken, PUF'ta sadece meydan okuma ve karsılık vermenin toplam biti kadar donanımda yer ayırmak gerekmektedir. Bazı durumlar PUF uygun mevcut donanımlarla bile gerçeklenebilir. Klonlanamaz ile kastedilen her PUF cihazı, aynı cihazda aynı yöntemler ile üretilmiş dahi olsa, kendine has ve tahmin edilemez bir yöntem ile meydan okumalara karsılık vermektedir. Bir PUF için meydan okumalara aynı şekilde karsılık verecek ikinci bir PUF cihaz üretmek imkânsızdır çünkü üretim aşaması tamamını kontrole almak imkânsızdır. Matematiksel olarak klonlanamaz ile kastedilen diğer meydan okuma-karşılık ikililerini kullanarak herhangi bir karşılığı veya PUF'un rassal parçalarından herhangi birini hesaplamak zor olmalı. Çünkü yanıtlar çok sayıda rassal parçanın meydan okuma ile karmaşık etkileşimleri sonucunda oluşur. Diğer bir deyişle, verilen bir PUF sistemi için rassal bileşenlerin tüm fiziksel özelliklerini bilmeden, meydan okuma-karşılık ikililerinin tespiti çok zordur. PUF'un fiziksel ve matematiksel olarak klonlanamaz olması onu gerçek manada klonlanamaz yapmaktadır. Bu özelliklerinden dolayı PUF'lar benzersiz bir aygıt tanımlayıcı olarak kullanılabilir. Ayrıca PUF'lar güvenli anahtar üretimi ve depolanmasında ve ayrıca önemli bir rassallık kaynağı olarak kullanılabilir. Tüm PUFs'lar sıcaklık, gerilim ve elektromanyetik girişim gibi çevresel etmenlerin bir sonucudur. Bu çevresel etmenler onların performansını etkiler. Bu nedenle, PUF'ın gücü sadece onun rassal olmasından değil aynı zamanda tüm cihazlar için cihazın kendine özgü olmasından kaynaklanmaktadır ve bu özellik aynı cihaz için farklı çevre şartlarında değişim göstermemektedir. PUF'larda farklı fiziksel rassallık kaynakları kullanılabilir. PUF'lar açıkça ortaya konmuş ve fiziksel sistemlerin özünden kaynaklanan içsel/tam rassallık olarak ikiye ayrılabilir. Bu tarz PUF'lar cihazların bir birinden ayrıştırılmasında çok daha etkilidir ve içsel rassallığa göre çok az çevresel farklılığı mevcuttur. Bu nedenle farklı prensipler kullanılabilmektedir ve parametreler doğrudan kontrol edilip eniyileme yapılabilmektedir. İç rassallık üretim aşamasında herhangi bir değişiklik gerektirmediği için açıkça ortaya konmuş rassallığa göre çok daha çekicidir. Bilgisayarlarda DRAM kullanılmaya başlandığından beri DRAM'ler etkili bir sistem düzeyinde PUF olarak kullanılabilmektedir. Bu sistem ilk kez Tehranipoor tarafından önerilmiştir"." DRAM, durağan RAM (SRAM)'den çok daha ucuz. Bu nedenle, DRAM PUF'lar rassal ama güvenilir bir kart kimliği (chip id) için kaynak olabilir. DRAM PUF'ların avantajı sistem üzerinde herhangi bir ekstra donanım veya devre gerekmeden cihaza özgü bir imza oluşturmasıdır. DRAM IC'lar sistem seviyesi PUF olarak henüz tamamı ile araştırılmış değil. Birçok uygulama için çıkışın kararlı olması önemlidir. Eğer PUF şifreleme algoritmalarında anahtar üretiminde kullanılacak işe hata düzeltmesinin doğru yapılması önemlidir ayrıca her türlü şart altında aynı anahtar tekrar üretilebilmeli. Bunun için iki temel yöntem vardır: Ön-işleme ve ardıl işlemler Hata Düzeltme. Geliştirilen yöntemler PUF'ın güvenlik ve verimini düşürmeden SRAM PUF'ları çok daha güvenli hale getirmiştir . Carnegie Mellon Üniversitesi'nde yapılan bazı araştırmalarda hata oranını yüzde 70 ile yüzde 100 arasında azaltan farklı PUF gerçeklemeleri bulunmuştur. Massachusetts Amherst Üniversitesi'nde yapılan araştırmalar ile SRAM PUF'ların anahtar üretiminde hata oranını azaltacak yöntemler geliştirildi. Tüm önerilen PUF'lar klonlanamaz değildir, birçoğuna laboratuvar ortamında başarılı saldırı gerçekleştirilmiştir. Berlin Teknoloji Enstitüsü bir araştırma ekibi, üniversitenin arıza analiz laboratuvarındaki mevcut cihazları kullanarak SRAM PUF 20 saat içinde klonlamayı başarmıştır. Bu iş yapılırken sadece bir mikroişlemcinin SRAM (Durağan RAM) hücreleri okundu. Üniversite Araştırma gösteriyor ki gecikme tabanlı PUF uygulamaları yan kanal saldırıları karsı savunmasız ve bu tarz saldırılara karşı önlemler geliştirmeye çalışmaktadırlar. Ayrıca, hatalı gerçeklenmiş PUF'lar sistemlerde "arka kapı" oluşturmaktadır. Haziran 2012, Fraunhofer Research Institution for Applied and Integrated Security (AISEC)de bir araştırmacı olan Dominik Merli, PUF'ların şifreleme sistemlerin heklenmesi için fazla miktarda giriş noktaları oluşturduğunu bu yüzden PUF'ın güvenlik tabanlı uygulamalarda pratikte kullanılabilmesi için daha çok araştırılması gerektiği iddia etti. Sunulan saldırıların tamamı FPGA veya Durağan RAM (SRAM) gibi güvenli olmayan sistemlerdeki PUF uygulamaları ile alakalı. Ayrıca çevrenin uygulanan güvenlik seviyesine uygun olması da önemli bir konu. Son zamanlarda yapılan çalışmalar gösterdi ki düşük maliyetli cihazlarla mili saniyeler içinde PUF'lara saldırmak mümkün. Bochum Ruhr Üniversitesinden bir takımın rassal PUf'ları XOR işlemlerine tabi tutarak, herhangi bir meydan okumaya karsılık üretecek bir süreç sundular. Bu yöntem için sadece 4 tane meydan okuma - karşılık çifti gerekiyor ve süreç 200ms den daha kısa sürüyor. Bu yöntemi kullanarak, $25 bir aygıt veya yakın alan iletişimi aktif edilmiş bir akıllı telefon ile bir kullanıcın arka cebindeki cüzdanında bulunan bir RFID kartını klonlamayı başardılar. Güvenilir Yürütme Teknolojisi Intel Güvenilir Yürütme Teknolojisi (Intel TXT, eskiden LaGrande Technology olarak bilinirdi), bilgisayar donanım teknolojisidir ve başlıca hedefleri şunlardır: Intel TXT, yazılım ve platform bileşenlerinin ölçümlerini sağlamak için bir Güvenilir Platform Modülü () ve şifreleme teknikleri kullanır. Böylece sistem yazılımı, hem de yerel ve uzaktan yönetim uygulamaları bu ölçümleri kullanarak yazılımın ve platform bileşenlerinin güvenli olup olmadığı kararını verebilir. Bu tamamlar. Bu teknoloji, Güvenilir Bilgi İşlem Grubu’nun () daha güvenli bilgi işlemeyi teşvik etmek için gerçekleştirdiği bir endüstri girişimine dayanmaktadır. Sistem veya kodunu bozarak ya da platformun yapılandırmasını değiştirerek hassas bilgileri çalmaya yönelik yazılım tabanlı saldırılara karşı koruma sağlar. TCG tarafından belirtilen (TPM) birçok güvenlik işlevi sağlar. Bu işlevler, sahteciliği önlemek için güvenli bir konumda çeşitli ölçümleri tutan özel yazmaçları ( -PCR) içerir. Ölçümler, Güvenli Hash Algoritması () kullanan bir şifreli hash değerinden oluşur; TPM v1.0 hash algoritmasını kullanır. Daha yeni TPM sürümleri (v2.0 +) . 'yi kullanırlar. Bir hash şifreleme algoritmasının istenen bir özelliği, (tüm pratik amaçlar için), herhangi iki modüldeki hash değerinin (hash özeti veya bir hash) , ancak modüller aynı ise, aynı değere sahip olmalarıdır. Ölçümler kod, veri yapıları, yapılandırma, bilgi veya belleğe yüklenebilen herhangi bir şey olabilir. TCG, kodun ölçülünceye kadar yürütülmemesini gerektirir. Belirli bir ölçüm sırasını sağlamak için, bir sıradaki hash ölçümleri farklı PCR'lere yazılmaz, aksine PCR bir ölçüm ile "genişletilmiş" olur. Bu, TPM'nin PCR'nin mevcut değerini ve genişletilecek ölçümü aldığını, bunların hash değerlerini hesaplayıp PCR'ın içeriğini bu hash değeri ile değiştirdiğini gösterir. Buradan ulaşılan ise bir PCR'de belirli bir ölçüme ulaşmanın tek yolu, tam olarak aynı ölçümleri aynı sırayla genişletmektir. Bu nedenle, ölçülen herhangi bir modül değiştirilmişse, ortaya çıkan PCR ölçümü farklı olacaktır ve dolayısıyla ölçülen herhangi bir kodun, konfigürasyonun, verinin, vs. değiştirilmiş veya bozulmuş olduğunu tespit etmek kolaydır. PCR genişletme mekanizması, yazılım katmanlarına bir güven Zinciri oluşturmak için çok önemlidir (aşağıya bakınız). Teknoloji, hem statik bir güven zincirini hem de dinamik bir güven zincirini destekler. Statik güven zinciri, platform başlatıldığında (veya platform sıfırlandığında), tüm PCR'leri varsayılan değerlerine döndürür. Sunucu platformları için ilk ölçüm, yonga seti () üreticisi tarafından sağlanan dijital olarak imzalanmış bir modülü (Kimliği Doğrulanmış Kod Modülü veya ACM(Authenticated Code Module) olarak adlandırılır) ölçmek için donanım (yani işlemci) tarafından yapılır. İşlemci, yürütme işlemini gerçekleştirmeden önce imzalı modülün imzasını ve bütünlüğünü doğrular. ACM daha sonra ek ölçümler yapabilen ilk BIOS kod modülünü ölçer. ACM ve BIOS kod modüllerinin ölçümleri, BIOS Güvenilir Bilgi İşlem Tabanının () ölçümü ile beraber güven ölçümünün statik çekirdek kökünü de(CRTM) tutacak olan PCR0'a atanmıştır. BIOS PCR’lerin içindeki ek bileşenleri şekildeki gibi ölçer: Dinamik güven zinciri, işletim sisteminin özel bir güvenlik talimatını çağırması ile başlar. Bu güvenlik talimatı dinamik PCR'leri (PCR17–22) varsayılan değerlerine sıfırlar ve ölçülen başlatmayı başlatır.(starts the measured launch.) İlk dinamik ölçüm donanım (yani işlemci) tarafından bir modülü (SINIT ACM olarak adlandırılacaktır.) ölçmek için yapılır. Bu modül yonga seti üreticisi tarafından sağlanmıştır. İmza ve bütünlüğü işlemci tarafından doğrulanmıştır ve dijital olarak imzalanmıştır. Bu, Güven Ölçümü’nün Dinamik Kökü (DRTM) olarak bilinir. SINIT ACM ilk olarak işletim sistemi kod modülünü ölçer (ölçülen başlatma ortamı - MLE olarak anılacaktır). MLE'nin yürütülmesine izin verilmeden önce, SINIT ACM, platformun platform sahibi tarafından ayarlanan Başlatma Kontrol İlke’lerinin (LCP) gereksinimlerini karşıladığını doğrular. LCP üç bölümden oluşmaktadır: LCP'nin bütünlüğü ve bilinen iyi ölçümlerinin listesi, TPM'deki politikanın bir hash değerinin saklanmasıyla korunmaktadır. Sadece platform sahibi tarafından değiştirilebilen korumalı uçucu olmayan bir konumda saklanmaktadır. LCP’nin çalışması bitirildikten sonra SINIT ACM, MLE'nin özel güvenlik yazmaçlarına erişim sağlar ve TPM Locality 2. seviye erişimini etkinleştirir. Bunun sonucunda Güvenilir İşletim Sistemi(Trusted Operating System) olarak çalışmasına izin verir. MLE artık dinamik PCR'lere ek ölçümler yapabilir duruma gelir. Dinamik PCR'ler aşağıdaki ölçümleri içerir: Teknoloji ayrıca işletim sisteminin platformu başlatması için daha güvenli bir yol sağlar. Normal işlemci başlatma işleminin aksine işletim sistemi, uygulama işlemcilerini doğrudan "korumalı modda" başlatırlar. Bunu uygulama işlemcilerini özel bir uyku durumunda bırakıp güvenli bir başlatma gerçekleştirerek yapar ve bu sayede güvenlik açığını önler. PCR değerleri hem lokal hem de uzaktan kullanılabilir. Ayrıca, TPM, PCR değerlerini dijital olarak imzalayabilme yeteneğine sahiptir, böylece herhangi bir kişi, ölçümlerin TPM'den geldiğini ve güvenli olduğunu doğrulayabilir. Böylece Uzaktan Onaylama’nın PCR değerlerindeki oynanmaları , bozulmaları ve kötü amaçlı yazılımları saptamasını sağlar. Ek olarak, bu değerler, yürütme ortamını tanımlamak için kullanılabilir (BIOS sürümü, işletim sistemi düzeyi, yapılandırma vb.) ve platformun daha fazla kategorize edilmesi için bunları kendi iyi bilinen değerleriyle karşılaştırır. Platformların güven seviyelerini değerlendirme ve güven düzeyi atama yeteneği, Güvenilir Bilgi İşlem Havuzları(Trusted Compute Pools) olarak bilinir. Güvenilir Bilgi İşlem Havuzlarının nasıl kullanıldığıyla ilgili bazı örnekler: Sayısız sunucu platformu Intel TXT'yi içerir ve TXT işlevi , , , Cloud Raxak ve dahil olmak üzere yazılım satıcıları tarafından geliştirilmiştir. projeler de TXT işlevini kullanır. Örneğin "tboot" , ve hypervisor için TXT tabanlı bir bütünlük sistemi sağlar. Montgomery EÄŸrisi Montgomery Eğrisi Peter L. Montgomery tarafından 1987’de tanımlanmış, klasik Weierstrass formundan farklı bir eliptik eğri formudur. Belirli hesaplamalar için ve özellikle farklı kriptografi uygulamalarında kullanılır. cismi üzerinde Montgomery egrisi, belirli değerleri için ve eşitsizliği sağlanıyorken, aşağıdaki eşitsizlikle tanımlanır: Bu eğri genellikle bir sonlu cismi üzerinde tanımlı olur. ( örnek olarak elemanın oluşturduğu bir sonlu cisim, ) Bu sonlu cismin karakteristiği 2'den farklı ve olması gerektiğine dikkat edelim. Aynı zamanda ve için aynı kısıtlamalara sahip rasyoneller üzerinde de düşünülür. Bir eliptik eğri üzerinde noktaları arasında, nokta toplama ve nokta ikileme işlemleri gerçekleştirilebilmektedir. Nokta Toplama; formula_2 eliptik eğrisi üzerinde tanımlı iki nokta olmak üzere formula_3; olacak şekilde formula_4 noktası bulmak işlemidir. Nokta İkileme ise formula_5 işlemidir. (Kullanılan işlemler hakkında detaylı bilgi için bkz; elliptic eğri grup kuralları (eng: )) formula_6 noktası Montgomery formundaki formula_7 eliptik eğrisi üzerinde bir nokta olmak üzere, bu noktanın Montgomery koordinatları formula_8 Burada formula_8 projektif koordinatlardır. (formula_10 ve formula_11). Bir nokta için bu tür bir temsilin(dönüşümün) bilgi kaybettiğine dikkat edin: gerçekten formula_12 ve formula_13 ( afin noktalarının kullanımında bir ayrım gözetilmez çünkü her iki noktanın kullanımı da bize formula_14 sonucunu verecektir. Ancak, bu gösterim(dönüşüm) ile bir formula_8 noktanın n sayısı ile çarpılmasını elde etmek mümkündür; formula_16 Şimdi, iki nokta dikkate alalım; formula_17 ve formula_18: Bu iki noktanın toplamları aşağıdaki şekilde ifade edilir; bu toplamın koordinatları: Yukarıdakı ilk işlemin(toplama işleminin) maliyeti: (3M+2S) (Burada M, tanımlı eliptik eğrideki herhangi iki elemanın çarpımını, S ise tanımlı cisimdeki bir elemanın karesini ifade ediyor) İkinci işlemin(ikileme) maliyeti : 2M + 2S + 1D, (Burada D herhangi bir elemanın bir formula_27 değeri seçilebilir. Montgomery formunda bir eliptik eğrininin bir noktasının formula_28 nokta ikilemesi, aşağıdaki algoritma ile gösterilebilir; Kabul edelim ki formula_33 noktası, formula_34 eğrisi üzerinde bir nokta olsun. Koordinatları; formula_35 ; formula_36, formula_37 O halde: Sonuç olarak bulduğumuz nokta; formula_41 dikkat edilirse, formula_42. formula_43formula_44 afin koordinatlarda Montgomery eğrisi formula_45 üzerinde iki nokta olmak üzere, formula_46 şeklinde belirlenen nokta geometrik olarak formula_45 ile formula_48 ve formula_49 noktalarını birleştiren doğrunun kesimini ifade eden üçüncü bir noktadır. Bu noktanın koordinatları formula_50 aşağıdaki şekilde belirlenir: 1) 2 boyutlu afin uzayda, formula_51 doğrusunun formula_48 ve formula_49 noktalarından geçtiğini varsayalım.(bu varsayımdan yararlanarak), formula_54 ve formula_55; elde edilir. 2) Doğru ile formula_45, eğri denklemindeki formula_57 değişkeni formula_51 ile değiştirilirse aşağıdaki 3. dereceden denklem elde edilir: Daha önce gözlemlenebildiği gibi, bu denklem formula_48, formula_49 ve formula_62 noktalarının x koordinatlarına göre üç köke sahiptir. Öyleyse denklem; 3) Yukarıda verilen iki özdeş denklemin katsayılarının, özellikle de ikinci mertebeden olanın terimlerinin katsayılarının karşılaştırılmasıyla aşağıdaki denklem elde edilir: Böylelikle,formula_65 terimi formula_66, formula_67, formula_68, formula_69 terimleri cinsinden aşağıdaki biçimde yazılabilir: 4) formula_62 noktasının formula_57 koordinatını bulabilmek için, formula_65 değerini formula_51 doğrusunda yerine koymak yeterlidir. Bunun doğrudan formula_62 noktasını vermeyeceğine dikkat edin. Gerçekten, bu yöntemle, formula_76, sağlayan formula_77 noktasının koordinatları bulunur. Eğer formula_48 ve formula_49 nokta ekleme işleminin sonuç noktasına ihtiyaç duyulursa, formula_76 ancak ve ancakformula_81 olması durumunu göz önüne almak gereklidir. Bu yüzden, verilen formula_77 noktası için formula_83 noktasını bulmak gereklidir. Bu işlem verilen formula_77 nin y koordinatının işaretini değiştirerek kolaylıkla yapılabilir. Başka bir deyişle, doğru denkleminde formula_65 ün yerine konulmasıyla elde edilen formula_57 koordinatının işaretini değiştirmek yeterli olacaktır. Öyleyse formula_87 noktasının koordinatları,formula_46 şunlardır: formula_45 Montgomery Eğrisi üzerinde verilen bir formula_48 noktası için, formula_93; Geometrik olarak eğri ile formula_48'eğet olan doğru arasındaki kesişimi ifade eden üçüncü noktasını temsil eder;formula_42 sağlayan formula_62 noktasının koordinatlarını bulabilmek için, 'nokta toplama' metodundakine benzer bir yol izlenir; ancak, bu durumda, "y" = "lx" + "m" doğrusu formula_48 eğrisine teğet olmalıdır. Bu yüzden, eğer formula_98 ile Doğrunun eğimini temsil eden "l" değeri aşağıdaki gibi verilir: kapalı fonksiyon teoremi'ne göre yazılabilir. Yani formula_101 ve formula_62, formula_42 Kabul edelim ki formula_105 karakteristiği 2'den farkli bir cisim olsun. Yine kabul edelim ki formula_45 Montgomery formunda bir eliptik eğri olsun: ve kabul edelim ki formula_110 bükülmüş Edwards formunda bir eliptik eğri olsun: Aşağıdaki teoremi Mongomery eğrileri ile bükülmüş Edwards eğrileri arasındaki birasyonel denkliği gösterir: Teorem (i) formula_105 üzerinde, her bükülmüş Edwards eğrisi bir Montgomery eğrisine birasyonel denktir. Özellikle, formula_110 bükülmüş Edwards eğrisi, formula_45 Montgomery eğrisine; formula_116, ve formula_117 sağlanıyorken birasyonel denktir. EÅŸleme: formula_110'den formula_45' ye birasyonel denklik, tersi; Dikkat edilirse, iki eğri arasındaki bu denklik her yerde geçerli değildir: gerçekten de formula_125 eşlemesi formula_45'de formula_127 ya da formula_128 noktalarında tanımlı değildir. Tüm eliptik eğriler Weierstrass formunda yazılabilir. Özellikle, Montgomery formundaki eliptik eğriyi ele alalım; aşağıdaki şekilde dönüştürülebilir: Bir kısa Weierstrass formu elde edebilmek için burada "u"'yu formula_136 değeri ile değiştirtirmek gerekir: SonuÃ§ olarak: Dolayısıyla eşleme şöyle verilir: aksine,formula_142 baz cismi üzerinde Weierstrass formunda bir eliptik eğri: Montgomery formuna ancak ve ancak formula_143 mertebesi 4'e bölünebilirse ve aşağıdaki koşulları sağlarsa dönüştürülebilir: Bu şartlar sağlandığında, formula_150 için aşağıdaki eşlemeye sahip olunur; GÃ¼lay Yedekci Gülay Yedekci (d. 1976, İstanbul) Türk siyasetçi ve mimar. Trakya Üniversitesi Mimarlık Bölümü'nden mezun olmuş, Yıldız Teknik Üniversitesi'nde yüksek lisansını, İTÜ'de doktorasını tamamlamıştır. 1996 yılında kendi mimarlık ofisini kurmuştur. Öğretim üyesi olarak görev yapmış Yeni Yüzyıl Üniversitesi mimarlık bölüm başkan yardımcısı ve mimarlık-mühendislik fakültesi dekan yardımcısı olarak görev almıştır. Yayımlanmış çok sayıda makalesi ve 4 kitabı vardır. CHP Fatih İlçe Gençlik Kolları Başkanlığı yapmış, 2009-2014 yılları arasında Fatih Belediyesi Meclis Üyesi olarak İmar ve Kültür Varlıklarını Koruma Komisyonlarında görev almıştır. 25. ve 26. dönem İstanbul milletvekilidir. Engelliler için "Turuncu Bayrak" önerisinin sahibidir. Ekolojik Kadın Köyü Projesinin mimarıdır; Sivil Toplum Kuruluşları Birliği Platformu ve Umut (Sokak) Çocukları Derneği yönetim kurullarında görev aldı. Hayatta Kal Derneği Genel Başkan Yardımcısı ve Demokratik Dayanışma Derneği eski Genel Başkanıdır. TMMOB Mimarlar Odası Genel Kurul Delegesidir. Genç Akademisyenler Hareketi Kurucusu ve Başkanıdır. İyi düzeyde İngilizce bilen Yedekci, 2 çocuk annesidir. Emek İspatı Emek ispatı (PoW), denial-of-service saldırıları ve bir ağ üzerinde bulunan spam mesajlar ile servislerin kötüye kullanımını, istemciden bir miktar iş yapmasını (genellikle bilgisayarın belirli bir süre işlem yapması anlamına gelir.) isteyerek önleme amaçlı ekonomik bir ölçüdür. Bu kavram, Cynthia Dwork ve Moni Naor tarafından 1993 tarihli bir dergi makalesiyle ilk kez ortaya konmuştur. "Emek İspatı" terimi ya da POW ilk kez Markus Jakobsson ve Ari Juels tarafından 1999 tarihli bir yayında literatüre kazandırılarak resmîleştirilmiştir. Emek ispatı sisteminin bir para birimine değer kazandırmak amacıyla kullanıldığı ilk örneklerden biri Solomon Adalarında kullanılan dir. Bu sistemlerin önemli bir özelliği asimetridir: Yapılacak iş istemci tarafında nispeten zor (ama makul derecede); hizmet sağlayıcı için ise kolay denetlenebilir olmalıdır. Bu düşünce, CPU maliyet fonksiyonu, istemci bulmacası, hesaplamalı bulmaca veya CPU fiyatlandırma fonksiyonu olarak da bilinir. CAPTCHA ise bilgisayar yerine insanlara çözdürmeyi amaçlamasıyla bu fikirden ayrılır. Alan ispatı (PoSpace) önerisi ise CPU zamanı yerine belirli bir miktar bellek veya disk kullanımını ispatlayarak aynı prensibi esas alır. Bant genişliği ispatı yaklaşımları, kriptopara bağlamında tartışılmıştır. Sahiplik ispatı, belli bir verinin ispatlayanda tutulduğunun kanıtlanmasını amaçlar. Hashcashte kullanılan popüler bir sistem, işin yapıldığının ispatlanması amacıyla e-posta gönderiminde iyi niyet belirtisi olarak özetin kısmen ters çevrilmesini kullanır. Örneğin, aşağıdaki üstbilgi codice_1 adresine 19 Ocak 2038 tarihinde bir mesaj göndermek için gereken yaklaşık 2özet hesaplamasını göstermektedir: Doğrulama, damganın (codice_2 üstbilgi adı, iki nokta ve '1' rakamına kadar olan boşluklar göz ardı edilerek) SHA-1 özetinin ikilik sistemde 52 adet 0 veya onaltılık sistemde 13 adet 0 ile başlayıp başlamadığının kontrol edilmesi ile tek işlemde yapılabilir: PoW sistemlerin spam mesaj problemi gibi bir hizmet engelleme sorununu gerçekten çözüp çözmediği tartışma konusudur; sistem, spam gönderen için spam eposta gönderimini verimsiz hale getirmeli ama aynı zamanda kötü niyetli olmayan kullanıcıların mesajlarını göndermelerine engel olmamalıdır. Diğer bir deyişle, gerçek bir kullanıcı eposta gönderirken herhangi bir zorlukla karşılaşmamalı ama bir e-posta spamcısı tek seferde birden fazla eposta gönderebilmek için yeterli miktarda işlem gücü harcamak zorunda olmalıdır. Emek ispatı sistemleri, Hashcash benzeri bir sistem kullanan bitcoin gibi daha karmaşık kriptografik sistemlerde temel olarak kullanılmaktadır . Emek ispat覺 protokollerde iki s覺n覺f vard覺r. Bilinen çözüm protokolleri, sınırsız olasılıklı protokollerden biraz daha düşük bir varyansa sahip olma eğilimindedir, çünkü dikdörtgen dağılımın varyansı, (aynı ortalamaya sahip) Poisson dağılımının varyansından daha düşüktür. Çeşitliliği azaltmak için genel bir teknik, çok sayıda örneğin ortalaması daha düşük varyansa sahip olacağından birden fazla bağımsız alt-soru(sub-challenge) kullanmaktır. Ayrıca, zaman-kilit bulmacası gibi sabit maliyetli fonksiyonlar da vardır. Dahası, bu programlar tarafından kullanılan temel fonksiyonlar aşağıdakilerden biri olabilir: Son olarak, bazı PoW sistemleri bir gizi, genellikle bir gizli anahtarı, bilen katılımcılara düşük maliyetli PoW'lar üretebilmelerine izin veren kısayol hesaplamalar sunar. Bunun sebebi, eposta listesi sahiplerinin yüksek bir maliyete maruz kalmadan her alıcı için damga üretebilmesidir. Böyle bir özelliğin istenip istenmediği kullanım senaryosuna bağlıdır. Bilinen emek ispatı fonksiyonlarının bir listesi aşağıda verilmiştir: Bilgisayar bilimcisi Hal Finney emek ispatı üzerine inşa edilmiş, yeniden kullanılabilir emek ispatı ("RPoW") kullanan bir sistem ortaya çıkarmıştır. Bazı pratik amaçlar için yeniden kullanılabilir emek ispatları yapma fikri, 1999 yılında zaten gündeme gelmişti. Finney'in RPoW amacı, nominal değeri madeninden fazla olan para olarak kullanmaktı. Altın bir paranın değerinin, üretimi için gereken ham altının değeriyle desteklendiği düşünüldüğünde, bir RPoW jetonunun değeri, bir PoW jetonunun " basılması " için gerekli olan gerçek dünya kaynaklarının değeri ile garanti edilir. Finney'in RPoW sürümünde, PoW jetonu Hashcashin bir parçasıdır. Bir web sitesi hizmet karşılığında bir PoW jetonunu talep edebilir. Kullanıcılardan gelen bir PoW jetonunun kullanılması, hizmetin; İnternet'e yönelik bant genişliği, hesaplama, disk alanı, elektrik ve yönetim yükü gibi temel kaynaklarının kullanımını sınırlandırarak, hizmetin anlamsız veya aşırı kullanımını engeller. Finney'in RPoW sistemi, bir PoW sisteminden jetonları üretmek için gerekli olan işi tekrar etmeden rassal değiş-tokuşlara izin vermesiyle ayrılıyordu. Bir kişi bir web sitesinde bir "PoW" jetonu harcadıktan sonra, web sitesinin operatörü yeni harcanmamış bir RPoW jetonu için "harcanan" PoW jetonunu değiştirebilirdi, bu da RPoW jetonlarını kabul etmek üzere benzer şekilde donatılmış bir üçüncü parti web sitesinde harcanabilirdi. Bu, bir PoW jetonu " basmak " için gerekli olan kaynakları koruyacaktı. RPoW jetonunun sahtecilik karşıtı özelliği, uzaktan onaylama ile garanti edilmişti. Aynı değerde yeni bir adet için kullanılan bir PoW veya RPoW jetonunu değiştiren RPoW sunucusu, ilgili tarafın hangi yazılımın RPoW sunucusunda çalıştığını doğrulamasına izin vermek için uzaktan onaylama kullanır. Finney'in RPoW yazılımı için kaynak kodu (BSD benzeri bir lisans altında) yayınlandığından, yeterince bilgili bir programcı, kodu inceleyerek, yazılımın (ve buna bağlı olarak, RPoW sunucusunun) eşit değerde harcanan bir jeton karşılığı haricinde hiçbir zaman yeni bir jeton vermediğini doğrulayabilir. 2009 yılına kadar, Finney sistemi gerçeklenen tek RPoW sistemiyken asla ekonomik olarak önemli bir kullanım görmedi. RPoW, güvenilen platform modülü (TPM) donanımında saklanan gizli anahtarlar ve TPM gizli anahtarlarına sahip üreticiler tarafından korunmaktadır. Bir TPM üreticisinin anahtarını çalmak ya da TPM yongasının kendisini inceleyerek anahtarı elde etmek, bu garantiyi bozar. 2009 yılında, Bitcoin ağı çevrimiçi oldu. Bitcoin, Finney'in RPoW'u gibi PoW'a dayanan bir emek ispatı sıdır. Ancak, Bitcoin'de çift harcama koruması, RPoW tarafından kullanılan donanım güvenilir hesaplama fonksiyonu yerine, para transferlerini izlemek için merkezi olmayan bir P2P protokolü ile sağlanır. Bitcoin, daha iyi güvenilirliğe sahiptir çünkü hesaplama ile korunmaktadır. Bitcoinler, bireysel madenciler tarafından Hashcash emek ispatı fonksiyonu kullanılarak "çıkarılır" ve P2P bitcoin ağındaki merkezi olmayan düğümler tarafından doğrulanır. Blok süresini hedeflenen sürenin civarında tutabilmek için zorluk periyodik olarak ayarlanır. . Birçok PoW sistemi, istemcilerin bir özet fonksiyonunu tersine çevirmek gibi işe yaramaz işleri yapmasını gerektirir. Bu, birçok kaynağın (özellikle istemcinin bilgisayarlarına güç veren elektrik) sadece para birimine güven sağlamak için kullanıldığı anlamına gelir. Bu kaynak harcamaları ile daha verimli olmak için, bazı alternatif paralar, gerçekleştirilen işin gerçekten yararlı olduğu bir PoW sistemi kullanır. Örneğin, Primecoin , istemcilerin belirli türlerde bilinmeyen asal sayıları bulmasını gerektirir, bunun da kullanılabileceği yan uygulamalar olabilir (bkz. Primecoin#Proof-of-work system). Merkle ağacı Kriptografi ve bilgisayar bilimlerinde, Hash ağacı ya da Merkle ağacında her yaprak düğümü veri blokunun özet değerini, her yaprak olmayan düğüm ise kendi alt düğümlerinin kriptografik özet değerlerini içerir. Merkle ağacı büyük veri yapılarının verimli ve güvenli bir şekilde doğrulanmasını sağlar. Merkle ağaçları, özet listeleri ve özet zincirlerinin genelleştirilmiş halidir. Bir yaprak düğümün verilen Merkle ağacının bir parçası olduğunu göstermek için, ağaçtaki yaprak düğümü sayısının logaritması kadar bir takım hesaplama yapılması gerekmektedir; bu da yaprak düğümü sayısı kadar işlem gerektiren özet listeleriyle çelişir. Merkle ağacı kavramı adını 1979 yılında Ralph Merkle'in patentiyle almıştır . Merkle ağaçları bilgisayarlar arası transfer edilen ya da bilgisayarlarda saklanan, işlenen her türlü verinin doğrulanmasında kullanılabilir. Kişiden kişiye (P2P) ağlarda alınan veri bloklarının hasarsız, değiştirilmemiş ve hatta sahte olup olmadığını anlamamıza yardımcı olurlar. Merkle ağaçları kriptografik hash fonksiyonlarında kullanılmaktadır. Merkle ağaçları aynı zamanda IPFS, Btrfs ve ZFS dosya sistemlerinde (veri bozulmalarını saymak için), Dat protokolünde, Apache Wave protokolünde, Git ve Mercurial dağıtık versiyon kontrol sistemlerinde, Tahoe-LAFS yedek sisteminde, Zeronet , Bitcoin ve Ethereum P2P ağlarında, seritfika şeffaflığı sisteminde ve Apache Cassandra, Riak, Dynamo gibi birçok NoSql sisteminde kullanılmaktadır. Satoshi Nakamoto Bitcoin uygulamaya geçirildiği noktada Merkle ağaçlarını aşırı boyutlu özet fonksiyonlarının Hızlı Merkle ağaçları kullanarak sıkıştırma aşamasında hafifletmiştir. Merkle ağaçları bir dosya veya dosya grubu örneğinde olduğu gibi yaprakları veri bloklarının özeti olan bir özet ağacıdır. Ağaçta bulunan düğümler altlarındaki kendi ilgili çocuklarının özet değerleri alınmış halidir. Örneğin, resimde görüldüğü gibi özet değeri 0, altından barındırdığı özet değeri 0-0 ve özet değeri 0-1 birleşiminin özet değerinin hesaplanması sonucudur. Yani, + işaretinin birleştirme olduğu özet 0 = özet( özet 0-0 + özet 0-1) ifadesi ile anlatımı ifade edebiliriz. Çoğu Merkle ağacı uygulaması ikilidir (her düğüm altındaki iki alt düğüm); ancak her düğümün altında çok daha fazla alt düğümde kullanılabilir. Genellikle, özet değeri için SHA-2 gibi bir kriptografik özet fonksiyonu kullanılır. Merkle ağacı yalnızca istem dışı hasarlara karşı korunması gerekiyorsa, CRC’ler gibi daha az güvenli checksumlar kullanılabilir. Bir Merkle ağacın tepesinde bir "üst özet" değeri (veya "kök özet değeri" veya "ana özet değeri") bulunur. Bir p2p ağında bir dosya indirmeden önce, çoğu durumda üst özet değeri indirilecek dosyalara iyi tavsiyelerde bulunduğu bilinen bir arkadaş veya bir İnternet sitesi gibi güvenilir bir kaynaktan edinilmiş olur. Üst özet değeri varsa, Merkle ağacı, p2p ağındaki herhangi bir eş gibi güvenilir olmayan herhangi bir kaynaktan alınabilir. Daha sonra alınan özet değeri ağacı güvenilir üst özet değeri ile karşılaştırılır ve özet değeri ağacı hasar görmüş veya sahte ise, program en iyi özet değeri ile eşleşene kadar başka bir kaynaktan başka bir Merkle ağacı denenecektir. Özet değeri listesinden temel farkı, aynı anda her ağacın bir dalının indirilebilmesi ve anında kontrol edilebilmesidir. Örneğin, yukarıdaki resimde, "veri bloku 2 "bütünlüğü, ağaçta "özet "0-0 ve özet 1 içeriyorsa veri blokunun özet işlemi yapılarak ve sonucu "özet "0-0 ve ardından özet 1 ile tekrarlı birleşimiyle hemen doğrulanabilir. Benzer şekilde, ağaçta "özet 1-1" ve "özet 0" varsa, "veri bloku 3’"ün bütünlüğü doğrulanabilir. Bu, çok küçük veri bloklarında dosyaları ayıracak kadar verimli olduğu için bir avantaj olabilir. Böylece yalnızca küçük bloklar olması gerekir ve zarar görürlerse yeniden indirilirler. Özet değeri dosyası çok büyükse, böyle bir özet ağacı veya özet listesi oldukça büyük olur. Ancak bu bir ağaçsa, küçük bir dal hızlı bir şekilde indirilebilir, dalın bütünlüğü kontrol edilebilir ve daha sonra veri bloklarının indirilmesi başlatılabilir. Merkle özet kökü (hash root), bir saldırganın aynı Merkle özet köküne sahip olan orijinal farklı bir belge oluşturduğu ikinci preimage saldırısı sağlayan ağaç derinliğini göstermez. Yukarıdaki örnekte, bir saldırgan, iki veri bloku içeren yeni bir belge oluşturabilir; ilk özet 0-0 + özet 0-1 ve ikincisi özet 1-0 + özet 1-1 şeklindedir. Sertifika Şeffaflığı Sisteminde basit bir düzeltme tanımlanmıştır: yaprak düğüm özet değerleri hesaplanırken, özet verilere bir 0x00 bayt ön eklenir ve iç düğüm özet değerleri hesaplanırken 0x01 eklenir. Merkle ağacının boyutunu kısıtlamak bazı resmi güvenlik belgelerinin bir ön şartıdır ve bazı kanıtları sıkılaştırmaya yardımcı olur. Bazı uygulamalar özet ağaç derinlik ön eklerinin özet değerini alır, öncesi kullanarak ağaç derinliğini sınırlar; böylece ayıklanan özet zincir yalnızca ön ek her adımda azalırsa ve yaprağa ulaşıldığında hala pozitif ise geçerli olarak tanımlanır. Kaplan ağaç özeti (Tiger Tree Hash) yaygın olarak kullanılan bir özet ağacı şeklidir. Genellikle 1024 bayt veri bloku boyutları ve Kaplan özeti ile ikili özet ağaç (düğümün altında kendine ait iki düğüm) yapısıyla kullanılır. Kaplan ağaç özetleri, Gnutella, Gnutella2 , Direct Connect P2P dosya paylaşım protokollerinde ve Phex, BearShare, LimeWire, Shareaza, DC ++ ve Valknut gibi dosya paylaşım uygulamalarında kullanılmaktadır. Base32: codice_1 URN: codice_2 magnet: codice_3 Merkle İmza Algoritması Özet değeri tabanlı kriptografide (Hash based cryptography), özet değeri ağacı (Aynı zamanda Merkle ağacı da denmektedir) tabanlı bir dijital imza algoritmasıdır ve Lampart imza algoritması gibi tek kullanımlık imzalardır. Ralph Merkle tarafından 1970 sonu itibarıyla geliştirilmiştir ve RSA, Dijital İmza Algoritması gibi geleneksel dijital imzalara alternatif olmuştur. Merkle imza algoritmasının avantajı kuantum bilgisayarı algoritmalarına karşı dirençli olduğuna inanılıyor olmasıdır. Geleneksel açık anahtar algoritmaları olan RSA ve ElGamal gibi algoritmalar efektif kuantum bilgisayarlarının tasarlanabilir olmasıyla birlikte (Shor'un algoritmasına dayanarak) güvensiz hale geldi. Merkle imza algoritması sadece güvenilir bir özet değeri fonksiyonunun varlığına dayanmaktadır. Bu özelliği de Merkle imza algoritmasının çok esnek ve kuantum bilgisayarlarına dirençli olmasını sağlamaktadır. Merkle imzasının sonlu imza potansiyeli olan tek kullanımlık bir imza olduğu unutulmamalıdır; Moni Maor ve Moti Yung'un imza tabanlı tek yölü permütasyonlar üzerindeki çalışması ve fonksiyonlar (ve evrensel tek yönlü özet değeri fonskiyonunun icadı) , Merkle benzeri imzaların tam bir imza algoritmasına dönüşmesine yol açmıştır. Merkle imza algoritması tek açık anahtar olan pub ile sınırlı sayıda mesajın imzasında kullanılabilir. Muhtemel mesajların sayısı ikinin katı olmalıdır, dolayısıyla olası mesajların sayısını N = 2 ile gösterelim. Ortak anahtar olan pub oluşturulması için ilk aşama N tane tek kullanımlık imza algoritmalarının (Lamport imza algoritması gibi) özel/açık anahtar çifti (X,Y) üretilmelidir. Her 1<= I <= 2 için, ortak anahtarın özet değeri h = H(Y) hesaplanır. Bütün formula_1formula_2 yaprak özet değeri özyineli bir şekilde özet değerleri alınarak ikili ağaç formasyonunda Merkle ağacı oluşturulur. formula_3 ifadesinde yükseklik için formula_4 ve sağ sol pozisyonu göstermek içinse formula_5. Buna istinaden, formula_6 özet değerleri yaprakları temsil etmektedir. Her iç düğümlerin değeri, kendi alt 2 çocuğunun değerlerinin birleşiminin özet değerlerinin alınması ile belirlenir. Örneğin, formula_7 ve formula_8. Bu şekilde, formula_2 yapraklı bir ağaçta formula_10 düğüm oluşturulmaktadır. Merkle imza algoritmasının özel anahtarı bütün (X,Y) çiftleridir. Algoritmanın en büyük problemlerinden birisi bu özel anahtar kümesinin boyutunun mesaj sayısıyla doğrusal oranda büyüyor olmasıdır. Açık anahtar pub ağacın kökü olan =a değeridir. Tek açık anahtar Y 'nin genele açılması güvenliği kırmayacaktır. Ancak, bunların kullanımı genel için bir ihtiyaç değildir ve boyutlarını da küçültmek adına gizli tutmak mantıklı olacaktır. Merkle imza algoritması ile M mesajını imzalamak için imzalayan bir (X,Y) anahtar çifti seçer, tek kullanımlık imza algoritması kullanarak imzalar ve ardından ek bilgileri ekleyerek aslında onun orijinal anahtar çiftlerinden biri olduğunu kanıtlar (bir sahtekar tarafından yeni yaratılanın yerine). İlk olarak, imzalayıcı daha önce başka bir mesajı imzalamak için kullanılmamış (X,Y) çifti seçer ve tek kullanımlık imza algoritmasını mesajı imzalamak için kullanarak sig' imzasını ve karşılık gelen Yi açık anahtarını elde eder. Mesaj alıcısına (X,Y) çiftinin orijinal anahtar çiftlerinden biri olduğunu kanıtlamak için Merkle ağacının ara düğümlerini dahil ederek alıcının h=a değerinin ağacın kökünde bulunan an,o açık anahtarını hesaplamak için kullanıldığını doğrulamasını sağlar . a değerinden kök değerine giden yolda n+1 düğüm bulunur ve bunların her birini A0...,An şeklinde ifade ederiz. A = a = H(Y) yaprak değeri ve A = a = pub ise kök değeri olmuş olur. formula_11 düğümünün formula_12.Alıcının önceki verilmiş olanla bir sonraki düğüm formula_12 formula_12.Bu düğüme formula_15, böylece formula_16. Bu sebeple,formula_17formula_18formula_19 bir kimlik doğrulama yolu sağ taraftaki şekilde gösterilmektedir. Bu düğümler auth,…,auth, Y ve tek kullanımlık imza olan sig’ birlikte Merkle imza algoritması kullanarak bir M imzası oluştururlar: sig = (sig’ || Y || auth|| auth ||…|| auth) Ayrıca unutulmamalıdır ki Lamport imza algoritması imza için kullanılırken , sig’ özel anahtar X'nin bir bölümünü içerir. Alıcı açık anahtar pub, mesaj M, ve imza sig = (sig’ || Y || auth|| auth ||…|| auth) bilmektedir.İlk olarak alıcı tek kullanımlık imza açık anahtarı Y kullanarak mesaja ait olan tek kullanımlık imza sig’ doğrular. Eğer sig’ M mesajına ait geçerli bir imza ise, alıcı tek kullanımlık imzanın açık anahtarının özet değerini alarak A = H(Y) hesaplar. j = 1,…, n-1 değerleri için , yol üzerindeki A düğümleri A = H(A || auth) ile hesaplanır. Eğer A Merkle anahtar algoritmasına ait açık anahtar pub’a eşit ise imza geçerlidir. Yalnız şifreli metin saldırısı Kriptografide, yalnız şifreli metin veya bilinen şifreli metin saldırısı, kriptanaliz için bir saldırı modelidir ve saldırganın yalnızca bir dizi şifreli metin kümesine erişebileceği varsayılır. Saldırganın şifrelenmeden önce açık metne erişimini sağlayan bir kanalı yoksa, pratikte tüm şifreli metin saldırılarında, saldırganın açık metin hakkında sadece az bir bilgisi vardır. Örneğin, saldırgan açık metnin yazıldığı dili veya açık metindeki karakterlerin beklenen istatistiksel dağılımını biliyor olabilir. Standart protokol verileri ve mesajlar, yaygın olarak kullanılan birçok sistemdeki açık metnin bir parçasıdır ve genellikle bu sistemler üzerindeki şifreli metinlere yönelik bir saldırının parçası olarak tahmin edilebilir veya verimli biçimde bilinebilir. Saldırı, şifreli metinlere karşılık gelen açık metinlerin ortaya çıktığında veya daha da iyisi anahtar ortaya çıkarsa tamamen başarılı olur. Altta yatan açık metin hakkında herhangi bir bilgiyi, saldırganın önceden bildikleri ötesinde edinme yeteneği hala başarılı sayılır. Örneğin saldırgan, bir trafik akışı güvenliğini korumak için sürekli bir şifreli metin gönderiyorsa, gerçek mesajları boş olanlardan ayırt edebilmeniz çok yararlı olacaktır. Gerçek mesajların varlığı hakkında bilinçli bir tahminde bulunmak bile trafik analizini kolaylaştıracaktır. Kriptografi tarihinde, kalem ve kâğıt kullanılarak uygulanan erken şifreler, sadece şifreli metinleri kullanılarak düzenli olarak kırılmıştır. Kriptograflar, frekans analizi gibi şifreli metinlere saldırmak için istatistiksel yöntemler geliştirmişlerdir. Enigma gibi mekanik şifreleme cihazları bu saldırıları çok daha zorlaştırmıştır (ancak, tarihsel olarak, Polonyalı kriptograflar Enigmanın yalnız şifreli metin saldırılarını gerçekleştirebilmişlerdir ancak mesaj ayarlarını belirtmek için güvensiz bir protokol kullanmışlardır). Enigma ile ilgili daha gelişmiş yalnız şifreli metin saldırıları, Bletchley Park'ta 2. Dünya Savaşı sırasında, kesişen şifrelere karşılık gelen açık metinleri akıllıca tahmin edilerek kırılmıştır. Her modern şifre, yalnız şifreli metin saldırılarına yönelik koruma sağlamaya çalışır. Yeni bir şifre tasarım standardı için güvenlik araştırması süreci genellikle uzun yıllar alır ve rastgele gürültülerden herhangi bir istatistiksel bilgi edinmek(statistical departure) için büyük miktarlarda şifreli metinlerin kapsamlı testini içerir. Bakınız: Advanced Encryption Standard process. Ayrıca, steganografi alanı, kısmen, bir veri parçasının, bir diğerinin istatistiksel profilini benimsemesine izin veren mimik fonksiyonlar(mimic functions) gibi yöntemler geliştirmeye evrilmiştir. Yine de, kapsamlı bir incelemeye tabi tutulmamış, ev yapımı(home-grown) özel algoritmaların zayıf şifreleme kullanımı veya zayıf şifrelere güvenmesi, hala yalnız şifreli metin saldırısına maruz kalan birçok bilgisayar çağı şifreleme sistemine( computer-age encryption systems) neden olmuştur. Bazı örnekler şunlardır: A Korean Odyssey A Korean Odyssey, 2017 ve 2018 yılında tvN kanalında yayınlanan Güney Kore'nin televizyon dizisi. Sevda Aydan Sevda Aydan (1930, Ankara - 6 Nisan 2018, İzmir), Türk oyuncu, ressam ve opera sanatçısı. Ankara Devlet Konservatuvarı mezunudur. İlki 1974'te çekilen "Kaynanalar" adlı yapımda canlandırdığı Tijen Hakmen karakteriyle tanınmaktadır. Rahatsızlığı sebebiyle İzmir'deki bir hastanede tedavi gören sanatçı 6 Nisan 2018'de burada 88 yaşında vefat etmiştir. Cenazesi İzmir'de Alaçatı Mezarlığı'ndaki aile kabristanında toprağa verilmiştir. Pyotr Brayko Petr Braiko (d. 9 Eylül 1919 -ö. 7 Nisan 2018), Sovyet askerdir. II. Dünya Savaşı esnasında görev yapmış olup Sovyetler Birliği Kahramanı unvanı mevcuttur. Sydir Kovpak'ın gerilla tugayının yedi baskınında yer aldı. Her ne kadar çocukluğunda askeri pilot olmak kendisini korkutmuşsada bu kendisinin kariyeri olmuştur. Kendisi Moskova İletişim Koleji'nden mezun olmuştur. 22 Haziran 1941'de Romanya sınırında bir Sovyet sınır muhafızı olarak harekete geçti. Kiev yakınlarındaki Sovyet güçlerinin trajik kuşatılması ve yönlendirilmesine tanık oldu. Sydir Kovpak, Semyon Rudnev ve Pyotr Vershigora'da dahil olmak üzere Ukrayna'daki büyük Sovyet gerilla liderlerinin rehberlik ettiği düşman hatlarının gerisinde yıllarca cephede yer aldı. Disk ÅŸifreleme Disk şifreleme içerisindeki bilgiyi kimliği doğrulanmamış kişilerden korumak için kolayca çözülemeyecek okunmaz bir koda dönüştüren bir teknolojidir. Disk şifreleme disk şifreleme yazılımı veya diske veya diskin herhangi bir bölümüne giden her bir bit veriyi şifreleyen bir donanım kullanır. Veri belleğine kimliği doğrulanmamış kişilerin erişmesini engeller. "Tam Disk Şifreleme "veya "Tüm Disk Şifreleme teknolojisinin," ana önyükleme kaydı veya benzer alanda bir açılış disketi, işletim sistemini başlatma kodu dışında kalan her şeyi şifrelediği ifade edilir. Bazı donanım tabanlı tam disk şifreleme sistemleri ana önyükleme kaydı dahil olmak üzere bütün önyükleme diskini şifreler. Şeffaf şifreleme ya da diğer adıyla gerçek zamanlı şifreleme ve havadayken şifreleme, bazı disk şifreleme yazılımı kullanılan bir yöntemdir. "Şeffaf" kelimesi kaydedilen veya yüklenen verinin otomatik olarak şifrelendiği veya çözüldüğü anlamına gelir. Şeffaf şifreleme ile, dosyalar anahtar doğrulandıktan hemen sonra erişilebilir hale gelir, eğer fiziksel bir sürücü var ise sanki o disk bölümü bu sürücüye yerleştirilmiş gibi davranır ve şifresiz olan bütün dosyaları erişilebilir yapar. Doğru şifre/anahtar dosyası veya doğru şifreleme anahtarları kullanılmadan hiçbir veri saklanan şifreli disk bölümü okunamaz (çözülemez).Tüm dosya sistemi o disk bölümü içerisinde şifrelenmiştir. (dosya isimleri, klasör adları, dosya içeriği, ve diğer üst-veriler). Son kullanıcıya şeffaf olmak için, şeffaf şifreleme şifreleme işlemini devreye sokmak için genelde makinenin sürücülerini kullanma izni ister. Her ne kadar bazı sürücüleri kurmak için yönetici girişi istense de, şifrelenmiş disk bölümleri çoğunlukla normal kullanıcı hakları ile bu işlemleri gerçekleştirir. Genel olarak, verilerin yazmak için şeffaf olarak şifrelenmesi veya okunmak için çözülmesi için kullanılan metotlar şeffaf şifreleme metotlarıdır. Disk şifreleme tüm durumlarda dosya şifreleme yerine geçmez. Disk şifreleme bazen daha güvenli bir uygulama oluşturmak için dosya düzeyinde şifreleme ile birleştirilebilir. Disk şifreleme genellikle bütün sürücüyü aynı anahtar ile şifrelediği için, bütün veriler sistem çalışıyorken çözülebilir. Ancak, bazı disk şifreleme çözümleri farklı disk bölümleri için birden çok anahtar ile şifreleme yapar. Eğer bir saldırgan bilgisayarın çalışma zamanında erişim izni elde ederse, bütün dosyalara erişme yetkisi olur. Klasik Dosya ve klasör şifreleme bunun yerine farklı anahtarlar ile farklı disk parçalarına erişim sağlar. Böylece saldırgan hala-şifreli olan dosya ve klasörlerden bilgi elde edemez. Disk şifrelemenin aksine, dosya düzeyinde şifreleme alışılan gibi dosya sisteminin üst-verisini, dizin yapısı, dosya isimleri, dosyanın son değiştirilme tarihi veya boyutu gibi bilgileri tipik bir şekilde şifrelemez. Güvenilir Platform Modülü ana kart üstünde gömülü olan ve donanım aygıtlarının kimlik doğrulamasını yapan güvenli bir kripto işlemcisidir. Her Güvenilir Platform Modülü çipi benzersiz bir özel aygıt olduğundan, platform için kimlik doğrulama yapma yeteneğine de sahiptir. Bu modül erişmek isteyen sistemin beklenen sistem olduğunu doğrulamak için kullanılır. Sınırlı sayıdaki Disk şifreleme çözümlerinin Güvenilir Platform Modülü desteği bulunmaktadır. Bu uygulamalar GPM kullanarak çözme anahtarını paketleyebilir, böylece sabit diski belli bir aygıta bağlamış olur. Eğer sabit disk belirlenmiş aygıttan kaldırılır ve başka birine bağlanırsa, çözme işlemi başarısız olur. Çözme şifresi veya jetonu (token) ile geri dönüşüm sağlanabilir. Ancak bir avantaj olarak, diskin bir aygıttan tam olarak çıkarılamaması, tek nokta hatası olarak şifreleme yaratabilir. Örneğin, GPM veya anakarta bir şey olursa, kullanıcı sabit diski bir başka bilgisayara bağlayarak veriye erişim sağlayamaz, ancak kullanıcı kurtarma anahtarını diskten çıkartabilir. Piyasada disk şifrelemeye izin veren birden fazla araç var. Ancak, hepsinin farklı özellikleri ve güvenlik seviyeleri bulunmakta. Bu uygulamaları üç ana kategoriye ayırabiliriz: Yazılım tabanlı, depolama aygıtının içinde bulunan donanım tabanlı ve başka bir yerde (örneğin işlemci veya ana bilgisayar veri yolu bağdaştırıcısında) bulunan donanım tabanlı uygulamalar. Depolama aygıtının içinde bulunan donanım tabanlı tam disk şifreleme uygulamasına kendini şifreleyen aygıtlar denir ve performansa kötü etkisi bulunmaz. Ayrıca, medya-şifreleme anahtarı aygıtı asla tek başına bırakmaz bunun sonucunda işletim sistemindeki hiçbir virüs buraya erişemez. Güvenilir Bilgi İşlem Grubu Opal aygıtı endüstride kendini şifreleyen aygıtlar konusunda standart haline gelmiştir. Dış donanım yazılım tabanlı çözümlere göre çok daha hızlıdır ancak işlemci versiyonları hala performansı etkileyebilir ve medya şifreleme anahtarları yeterince iyi korunmuyor olabilir. Ön yükleme aygıtı için bütün çözümler ön yükleme öncesi kimlik doğrulama bileşeni ister. Bu bileşen birkaç sağlayıcı firma tarafında bütün çözüm tipleri için mevcuttur. Bütün durumlarda kimlik doğrulama bilgileri çok önemlidir ve simetrik şifreleme genel hatlarıyla güçlü olduğu için genellikle potansiyel en zayıf nokta burası oluyor. Güvenli ve güvenilir kurtarma mekanizmaları ve kurum içinde herhangi bir disk şifreleme çözümleri büyük ölçekli dağıtım için gereklidir. Çalışanın haber vermeden şirketten ayrılması veya şifresini unutması durumunda uygulama, güvenli ama bir o kadar da kolay bir şekilde şifreleri (en önemli veri) kurtarma özelliği sağlaması